on:
  push:
    tags:
      - "*"

# Based on https://github.com/Grokmoo/sulis/blob/master/.github/workflows/release.yml
jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Output Release URL
        run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
      - name: Publish Release URL
        uses: actions/upload-artifact@v1
        with:
          name: release_url
          path: release_url.txt

  build:
    needs: [ create_release ]
    name: build ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-pc-windows-gnu
            extension: ".exe"
          - target: x86_64-unknown-linux-gnu
            extension: ""
    
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - uses: actions/checkout@master
      - name: Build
        run: |
          docker build -t fioravanti-builder-x86_64-unknown-linux-gnu -f .github/Dockerfile-linux-builder .
          cargo install cross
          cross build --release --target ${{ matrix.target }}
          mkdir fioravanti/
          cp target/${{ matrix.target }}/release/main${{ matrix.extension }} fioravanti/fioravanti${{ matrix.extension }}
          git archive HEAD --prefix=fioravanti/ --format=zip -o fioravanti-${{ steps.get_version.outputs.VERSION }}-${{ matrix.name }}.zip
          zip -u fioravanti-${{ steps.get_version.outputs.VERSION }}-${{ matrix.name }}.zip fioravanti/fioravanti${{ matrix.extension }}
      - name: Load Release URL
        uses: actions/download-artifact@v1
        with:
          name: release_url
      - name: Get Release URL
        id: get_release_url
        run: |
          value=`cat release_url/release_url.txt`
          echo ::set-output name=upload_url::$value
      - name: Upload Asset
        id: upload_asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_url.outputs.upload_url }}
          asset_path: ./fioravanti-${{ steps.get_version.outputs.VERSION }}-${{ matrix.name }}.zip
          asset_name: fioravanti-${{ steps.get_version.outputs.VERSION }}-${{ matrix.name }}.zip
          asset_content_type: application/zip